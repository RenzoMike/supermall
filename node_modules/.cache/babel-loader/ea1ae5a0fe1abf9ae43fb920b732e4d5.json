{"ast":null,"code":"export default {\n  name: 'DetailCarousel',\n  props: {\n    topImages: {\n      type: Array,\n\n      default() {\n        return [];\n      }\n\n    }\n  },\n\n  data() {\n    return {};\n  },\n\n  mounted() {\n    if (this.$refs.carousel) this.sildeBanner();\n  },\n\n  created() {},\n\n  methods: {\n    sildeBanner() {\n      // 1 / 选中的轮播图\n      let box = document.querySelector('.el-carousel__container');\n      let startPoint = 0;\n      let stopPoint = 0; //重置坐标\n\n      let resetPoint = () => {\n        startPoint = 0;\n        stopPoint = 0;\n      }; //手指按下\n\n\n      box.addEventListener(\"touchstart\", e => {\n        1 / 手指点击位置的x坐标;\n        startPoint = e.changedTouches[0].pageX;\n      }); // 1 / 手指滑动\n\n      box.addEventListener(\"touchmove\", e => {\n        // 1手指滑动后终点位置x的坐标\n        stopPoint = e.changedTouches[0].pageX;\n      }); // 当手指抬起的时候，判断图片滚动离左右的距离\n      // let that = this\n\n      box.addEventListener(\"touchend\", e => {\n        if (stopPoint == 0 | startPoint - stopPoint == 0) {\n          resetPoint();\n          return;\n        }\n\n        if (startPoint - stopPoint > 0) {\n          resetPoint();\n          that.$refs.carousel.next();\n          return;\n        }\n\n        if (startPoint - stopPoint < 0) {\n          resetPoint();\n          that.$refs.carousel.prev();\n          return;\n        }\n      });\n    }\n\n  },\n  computed: {},\n  components: {}\n};","map":{"version":3,"mappings":"AASA;EACAA,sBADA;EAEAC;IACAC;MACAC,WADA;;MAEAC;QACA;MACA;;IAJA;EADA,CAFA;;EAUAC;IACA;EAGA,CAdA;;EAeAC;IACA;EACA,CAjBA;;EAkBAC,YAlBA;;EAmBAC;IACAC;MACA;MACA;MACA;MACA,kBAJA,CAKA;;MACA;QACAC;QACAC;MACA,CAHA,CANA,CAUA;;;MACAC;QACA;QACAF;MACA,CAHA,EAXA,CAeA;;MACAE;QACA;QACAD;MACA,CAHA,EAhBA,CAoBA;MACA;;MACAC;QACA;UACAC;UACA;QACA;;QACA;UACAA;UACAC;UACA;QACA;;QACA;UAEAD;UAEAC;UACA;QACA;MACA,CAjBA;IAkBA;;EAzCA,CAnBA;EA8DAC,YA9DA;EA+DAC;AA/DA","names":["name","props","topImages","type","default","data","mounted","created","methods","sildeBanner","startPoint","stopPoint","box","resetPoint","that","computed","components"],"sourceRoot":"src/views/detail/childComps","sources":["DetailCarousel.vue"],"sourcesContent":["<template>\n  <el-carousel trigger=\"click\" arrow=\"never\" height=\"250px\" ref=\"carousel\">\n    <el-carousel-item v-for=\"(item, index) in topImages\" :key=\"index\">\n      <img :src=\"item\" alt=\"\" />\n    </el-carousel-item>\n  </el-carousel>\n</template>\n\n<script>\nexport default {\n  name: 'DetailCarousel',\n  props: {\n    topImages: {\n      type: Array,\n      default () {\n        return []\n      }\n    }\n  },\n  data () {\n    return {\n\n    }\n  },\n  mounted () {\n    if (this.$refs.carousel) this.sildeBanner()\n  },\n  created () { },\n  methods: {\n    sildeBanner () {\n      // 1 / 选中的轮播图\n      let box = document.querySelector('.el-carousel__container')\n      let startPoint = 0\n      let stopPoint = 0\n      //重置坐标\n      let resetPoint = () => {\n        startPoint = 0\n        stopPoint = 0\n      }\n      //手指按下\n      box.addEventListener(\"touchstart\", (e) => {\n        1 / 手指点击位置的x坐标\n        startPoint = e.changedTouches[0].pageX\n      })\n      // 1 / 手指滑动\n      box.addEventListener(\"touchmove\", (e) => {\n        // 1手指滑动后终点位置x的坐标\n        stopPoint = e.changedTouches[0].pageX\n      })\n      // 当手指抬起的时候，判断图片滚动离左右的距离\n      // let that = this\n      box.addEventListener(\"touchend\", (e) => {\n        if (stopPoint == 0 | startPoint - stopPoint == 0) {\n          resetPoint()\n          return\n        }\n        if (startPoint - stopPoint > 0) {\n          resetPoint()\n          that.$refs.carousel.next()\n          return\n        }\n        if (startPoint - stopPoint < 0) {\n\n          resetPoint()\n\n          that.$refs.carousel.prev()\n          return\n        }\n      })\n    }\n  },\n  computed: {},\n  components: {},\n}\n</script>\n\n<style scoped>\n</style>\n"]},"metadata":{},"sourceType":"module"}