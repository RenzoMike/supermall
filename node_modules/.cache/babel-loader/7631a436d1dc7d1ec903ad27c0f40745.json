{"ast":null,"code":"export default {\n  name: 'name',\n  props: {\n    banners: {\n      type: Array,\n      default: []\n    }\n  },\n\n  data() {\n    return {\n      isLoad: false\n    };\n  },\n\n  methods: {\n    setActiveItem(pre, next) {\n      console.log(pre);\n    },\n\n    // 监听图片是否加载完成\n    imgLoad() {\n      try {\n        if (!this.isLoad) {\n          // console.log('轮播图加载完成')\n          this.$bus.$emit('carouselImgLoad');\n          this.isLoad = true;\n        }\n      } catch (error) {\n        console.log(error);\n        return error;\n      }\n    },\n\n    sildeBanner() {\n      // 1 / 选中的轮播图\n      let box = document.querySelector('.el-carousel__container');\n      let startPoint = 0;\n      let stopPoint = 0; //重置坐标\n\n      let resetPoint = () => {\n        startPoint = 0;\n        stopPoint = 0;\n      }; //手指按下\n\n\n      box.addEventListener(\"touchstart\", e => {\n        // 1 / 手指点击位置的x坐标\n        startPoint = e.changedTouches[0].pageX;\n      }); // 1 / 手指滑动\n\n      box.addEventListener(\"touchmove\", e => {\n        // 1手指滑动后终点位置x的坐标\n        stopPoint = e.changedTouches[0].pageX;\n      }); // 当手指抬起的时候，判断图片滚动离左右的距离\n\n      box.addEventListener(\"touchend\", e => {\n        if (stopPoint == 0 | startPoint - stopPoint == 0) {\n          resetPoint();\n          return;\n        }\n\n        if (startPoint - stopPoint > 0) {\n          resetPoint();\n          this.$refs.carousel.next();\n          return;\n        }\n\n        if (startPoint - stopPoint < 0) {\n          resetPoint();\n          this.$refs.carousel.prev();\n          return;\n        }\n      });\n    }\n\n  },\n\n  created() {\n    this.$refs.carousel ? this.sildeBanner() : null;\n  },\n\n  components: {},\n  computed: {}\n};","map":{"version":3,"mappings":"AAiBA;EACAA,YADA;EAEAC;IACAC;MACAC,WADA;MAEAC;IAFA;EADA,CAFA;;EAQAC;IACA;MACAC;IADA;EAGA,CAZA;;EAaAC;IACAC;MACAC;IACA,CAHA;;IAIA;IACAC;MACA;QACA;UACA;UACA;UACA;QACA;MACA,CANA,CAMA;QACAD;QACA;MACA;IAEA,CAjBA;;IAkBAE;MACA;MACA;MACA;MACA,kBAJA,CAKA;;MACA;QACAC;QACAC;MACA,CAHA,CANA,CAUA;;;MACAC;QACA;QACAF;MACA,CAHA,EAXA,CAeA;;MACAE;QACA;QACAD;MACA,CAHA,EAhBA,CAoBA;;MACAC;QACA;UACAC;UACA;QACA;;QACA;UACAA;UACA;UACA;QACA;;QACA;UACAA;UACA;UACA;QACA;MACA,CAfA;IAgBA;;EAvDA,CAbA;;EAsEAC;IACA;EACA,CAxEA;;EAyEAC,cAzEA;EA4EAC;AA5EA","names":["name","props","banners","type","default","data","isLoad","methods","setActiveItem","console","imgLoad","sildeBanner","startPoint","stopPoint","box","resetPoint","created","components","computed"],"sourceRoot":"src/components/content/Carousel","sources":["Carousel.vue"],"sourcesContent":["<template>\n  <el-carousel\n    trigger=\"click\"\n    arrow=\"hover\"\n    height=\"250px\"\n    indicator-position=\"none\"\n    ref=\"carousel\"\n  >\n    <el-carousel-item v-for=\"(item, index) in banners\" :key=\"index\">\n      <a :href=\"item.link\">\n        <img :src=\"item.image\" alt=\"\" @load=\"imgLoad\" />\n      </a>\n    </el-carousel-item>\n  </el-carousel>\n</template>\n\n<script>\nexport default {\n  name: 'name',\n  props: {\n    banners: {\n      type: Array,\n      default: []\n    }\n  },\n  data () {\n    return {\n      isLoad: false\n    }\n  },\n  methods: {\n    setActiveItem (pre, next) {\n      console.log(pre)\n    },\n    // 监听图片是否加载完成\n    imgLoad () {\n      try {\n        if (!this.isLoad) {\n          // console.log('轮播图加载完成')\n          this.$bus.$emit('carouselImgLoad')\n          this.isLoad = true\n        }\n      } catch (error) {\n        console.log(error)\n        return error\n      }\n\n    },\n    sildeBanner () {\n      // 1 / 选中的轮播图\n      let box = document.querySelector('.el-carousel__container')\n      let startPoint = 0\n      let stopPoint = 0\n      //重置坐标\n      let resetPoint = () => {\n        startPoint = 0\n        stopPoint = 0\n      }\n      //手指按下\n      box.addEventListener(\"touchstart\", (e) => {\n        // 1 / 手指点击位置的x坐标\n        startPoint = e.changedTouches[0].pageX\n      })\n      // 1 / 手指滑动\n      box.addEventListener(\"touchmove\", (e) => {\n        // 1手指滑动后终点位置x的坐标\n        stopPoint = e.changedTouches[0].pageX\n      })\n      // 当手指抬起的时候，判断图片滚动离左右的距离\n      box.addEventListener(\"touchend\", (e) => {\n        if (stopPoint == 0 | startPoint - stopPoint == 0) {\n          resetPoint()\n          return\n        }\n        if (startPoint - stopPoint > 0) {\n          resetPoint()\n          this.$refs.carousel.next()\n          return\n        }\n        if (startPoint - stopPoint < 0) {\n          resetPoint()\n          this.$refs.carousel.prev()\n          return\n        }\n      })\n    }\n  },\n  created () {\n    this.$refs.carousel ? this.sildeBanner() : null\n  },\n  components: {\n\n  },\n  computed: {\n\n  },\n}\n</script>\n\n<style scoped>\n.el-carousel__item a {\n  color: #475669;\n  font-size: 14px;\n  opacity: 0.75;\n  line-height: 150px;\n  margin: 0;\n}\n\n.el-carousel__item:nth-child(2n) {\n  background-color: #99a9bf;\n}\n\n.el-carousel__item:nth-child(2n + 1) {\n  background-color: #d3dce6;\n}\nimg {\n  height: 100%;\n  /* width: 100%; */\n  object-fit: cover;\n  vertical-align: middle;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}