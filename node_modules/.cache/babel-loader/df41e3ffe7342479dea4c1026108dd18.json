{"ast":null,"code":"import BScroll from '@better-scroll/core';\nimport Pullup from '@better-scroll/pull-up';\nimport { info } from 'console';\nBScroll.use(Pullup);\nexport default {\n  name: 'Scroll',\n  props: {\n    probeType: {\n      type: Number,\n      default: 0\n    },\n    pullUpLoad: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      bscroll: null\n    };\n  },\n\n  methods: {\n    // 滚动插件\n    initBscroll() {\n      this.bscroll = new BScroll(this.$refs.wrapper, {\n        pullUpLoad: this.pullUpLoad,\n        click: true,\n        probeType: this.probeType\n      });\n      this.bscroll.on('pullingUp', this.pullingUpHandler); // 监听滚动位置\n\n      this.bscroll.on('scroll', position => {\n        this.$emit('scroll', position);\n      }); // 监听上拉事件,实现上拉加载更多\n\n      if (this.probeType) {\n        this.bscroll.on('pullingUp', () => {\n          this.$emit('pullingup');\n        });\n      }\n    },\n\n    scrollTo(x, y, time = 600) {\n      this.bscroll && this.bscroll.scrollTo(x, y, time);\n    },\n\n    refresh() {\n      console.log('----');\n      this.bscroll && this.bscroll.refresh();\n    },\n\n    finishPullUp() {\n      this.bscroll && this.bscroll.finishPullUp();\n    },\n\n    getScrollY() {\n      return this.bscroll ? this.bscroll.y : 0;\n    }\n\n  },\n\n  mounted() {\n    this.initBscroll();\n  },\n\n  created() {},\n\n  computed: {},\n  components: {}\n};","map":{"version":3,"mappings":"AAUA;AACA;AACA;AACAA;AACA;EACAC,cADA;EAEAC;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,aADA;MAEAC;IAFA;EALA,CAFA;;EAYAE;IACA;MACAC;IADA;EAGA,CAhBA;;EAiBAC;IACA;IACAC;MACA;QACAJ,2BADA;QAEAK,WAFA;QAGAR;MAHA;MAKA,oDANA,CAOA;;MACA;QACA;MACA,CAFA,EARA,CAWA;;MACA;QACA;UACA;QACA,CAFA;MAGA;IACA,CAnBA;;IAoBAS;MACA;IACA,CAtBA;;IAuBAC;MACAC;MACA;IACA,CA1BA;;IA2BAC;MACA;IACA,CA7BA;;IA8BAC;MACA;IACA;;EAhCA,CAjBA;;EAmDAC;IACA;EACA,CArDA;;EAsDAC,WAEA,CAxDA;;EAyDAC,YAzDA;EA0DAC;AA1DA","names":["BScroll","name","props","probeType","type","default","pullUpLoad","data","bscroll","methods","initBscroll","click","scrollTo","refresh","console","finishPullUp","getScrollY","mounted","created","computed","components"],"sourceRoot":"src/components/common/scroll","sources":["Scroll.vue"],"sourcesContent":["<template>\n  <!--  -->\n  <div ref=\"wrapper\">\n    <div class=\"content\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport BScroll from '@better-scroll/core'\nimport Pullup from '@better-scroll/pull-up'\nimport { info } from 'console'\nBScroll.use(Pullup)\nexport default {\n  name: 'Scroll',\n  props: {\n    probeType: {\n      type: Number,\n      default: 0\n    },\n    pullUpLoad: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      bscroll: null,\n    }\n  },\n  methods: {\n    // 滚动插件\n    initBscroll () {\n      this.bscroll = new BScroll(this.$refs.wrapper, {\n        pullUpLoad: this.pullUpLoad,\n        click: true,\n        probeType: this.probeType\n      })\n      this.bscroll.on('pullingUp', this.pullingUpHandler)\n      // 监听滚动位置\n      this.bscroll.on('scroll', (position) => {\n        this.$emit('scroll', position)\n      })\n      // 监听上拉事件,实现上拉加载更多\n      if (this.probeType) {\n        this.bscroll.on('pullingUp', () => {\n          this.$emit('pullingup')\n        })\n      }\n    },\n    scrollTo (x, y, time = 600) {\n      this.bscroll && this.bscroll.scrollTo(x, y, time)\n    },\n    refresh () {\n      console.log('----')\n      this.bscroll && this.bscroll.refresh()\n    },\n    finishPullUp () {\n      this.bscroll && this.bscroll.finishPullUp()\n    },\n    getScrollY () {\n      return this.bscroll ? this.bscroll.y : 0\n    }\n  },\n  mounted () {\n    this.initBscroll()\n  },\n  created () {\n\n  },\n  computed: {},\n  components: {},\n}\n</script>\n\n<style scoped>\n</style>\n"]},"metadata":{},"sourceType":"module"}